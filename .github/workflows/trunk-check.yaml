name: Trunk Check
run-name: ${{ fromJSON(inputs.payload).checkWorkflowRunName }}
on:
  workflow_dispatch:
    inputs:
      payload:
        description: For invocation by Trunk Check
        required: false

permissions:
  contents: read

jobs:
  check:
    name: ${{ fromJSON(inputs.payload).checkJobName }}
    runs-on: ${{ fromJSON(inputs.payload).checkJobRunsOn }}
    concurrency:
      group: ${{ fromJSON(inputs.payload).concurrencyGroup }}
      cancel-in-progress: true

    steps:
      - name: Error Handling
        run: |\n          from error_handling import handle_error, log_error, fallback_action\n          try:\n            # Add try-block content here\n          except Exception as e:\n            error_message = str(e)\n            log_error(error_message, 'Error details go here')\n            fallback_action()
          try {
            # Add try-block content here
      - name: Trunk Check
            uses: trunk-io/trunk-action@v1
          catch ::error
          
          fallback: |
            # Add fallback mechanism here
          
          notify: |
            # Add notification mechanism here
            # Add notification mechanism here
        with:
          check-mode: payload
